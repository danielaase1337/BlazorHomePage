@page "/covidcontacts"
@page "/covidcontacts/{id}"

@if (_tempContact != null && _tempContactDate != null)
{
    <Modal @ref="_modalRef">
        <ModalBackdrop />
        <ModalContent IsCentered="true">
            <ModalHeader>
                <ModalTitle>Oppdater kontakt</ModalTitle>
                <CloseButton Clicked="@HideModal" />
            </ModalHeader>
            <ModalBody>
                <Field>
                    <FieldLabel>Name</FieldLabel>
                    <TextEdit @bind-Text="@_tempContact.Name" />
                </Field>
                <Field>
                    <FieldLabel>Sted</FieldLabel>
                    <TextEdit @bind-Text="@_tempContact.Sted" />
                </Field>
                <Field>
                    <FieldLabel>Dato</FieldLabel>
                    <DateEdit TValue="DateTime?" @bind-Date="@_tempContactDate" /> 
                </Field>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="@HideModal">Close</Button>
                <Button Color="Color.Primary" Clicked="@HideModalAndSave">Save Changes</Button>
            </ModalFooter>
        </ModalContent>
    </Modal>

}



<div class="container-fluid">
    <div class="row align-items-start">

        @if (SelectedUser != null)
        {
            <div class="col-5">
                <AddNewCovidContactForm NewContactAdded="@(f=> NewContactedUpdated(f))" OwnerName="@SelectedUser.FirstName.ToLower()"></AddNewCovidContactForm>
            </div>
            <div class="col-lg">
                <h5>Nærkontakter for @SelectedUser.ToString()</h5>
                @if (SelectedCovidContact != null)
                {
                    <Button class="btn btn-outline-danger" @onclick="@(f=> DeleteSelectedContact(f))"><i class="fa fa-times" style="color:red"></i></Button>
                    <Button class="btn btn-outline-warning" @onclick="@(f=> EditSelectedContact())"><i class="fas fa-edit"></i></Button>
                }
                @if (Contacts != null && Contacts.Any())
                {

                    <DataGrid TItem="OneContactModel"
                              Data="@Contacts"
                              @bind-SelectedRow="@SelectedCovidContact"
                              Editable="true" EditMode="DataGridEditMode.Form">
                        <DataGridColumn TItem="OneContactModel" Field="@nameof( SelectedCovidContact.Name)" Caption="Navn" Editable="false" />
                        <DataGridColumn TItem="OneContactModel" Field="@nameof( SelectedCovidContact.Sted)" Caption="Sted" Editable="false" />
                        <DataGridDateColumn TItem="OneContactModel" Field="@nameof(SelectedCovidContact.ContactDate)" Caption="Dato" Editable="true">
                            <DisplayTemplate>
                                @{
                                    var date = (context as OneContactModel)?.ContactDate;
                                    if (date != null)
                                    {
                                        @($"{date.Value.ToString("dd.MM.yyyy")}")
                                    }
                                }
                            </DisplayTemplate>
                        </DataGridDateColumn>



                    </DataGrid>

                }
                else
                {
                    <h4>Ingen kontakter registrert for deg..  </h4>
                }

            </div>
        }
    </div>
</div>


@code {


    [Parameter]
    public string Id { get; set; }
    [Parameter]
    public User SelectedUser { get; set; }
    [Parameter]
    public List<OneContactModel> Contacts { get; set; }

    private Modal _modalRef;
    DateTime? _tempContactDate = DateTime.MinValue;
    private OneContactModel _tempContact = new OneContactModel();


    private User[] _availableUsers;
    private OneContactModel SelectedCovidContact;

    [Inject]
    public ICovidContactsDataManager _dataManager { get; set; }

    [Inject]
    public IUserDataManager<User> _localUserManager { get; set; }


    protected async override Task OnParametersSetAsync()
    {
        //if (_localUserManager == null)
        //    _localUserManager = new LocalUserDataManager();

        if (_availableUsers == null)
        {
            _availableUsers = await _localUserManager.GetAllUsersAsync();
        }
        Id = Id ?? "1";
        SelectedUser = _availableUsers.FirstOrDefault(f => f.UserId.ToString().Equals(Id));


        if (SelectedUser != null)
        {
            
            Contacts = await _dataManager.GetAllContactsFromUser(SelectedUser.FirstName.ToLower());
        }

    }


    private async Task DeleteSelectedContact(MouseEventArgs args)
    {
        if (SelectedCovidContact != null)
        {
            _dataManager.Delete(SelectedCovidContact);
            if (await _dataManager.SaveChangesAsync())
            {
                Contacts.Remove(SelectedCovidContact);
                SelectedCovidContact = null;
            }
        }
    }
    private void EditSelectedContact()
    {
        if (SelectedCovidContact != null)
        {
            _tempContact = new OneContactModel(SelectedCovidContact);
            _tempContactDate = _tempContact.ContactDate;
            _modalRef.Show();
        }
    }



    private async Task NewContactedUpdated(OneContactModel newContact)
    {
        try
        {
            newContact.OwnerId = SelectedUser.FirstName.ToLower();
            _dataManager.Add<OneContactModel>(newContact);
            var saveResult = await _dataManager.SaveChangesAsync();
            if (saveResult)
                Contacts.Add(newContact); //kan også hente kontakter fra api.
        }
        catch (Exception e)
        {

            throw e;
        }
    }


    private void HideModalAndSave()
    {
        SelectedCovidContact.Name = _tempContact.Name;
        SelectedCovidContact.Sted = _tempContact.Sted;
        var updatedDate = _tempContactDate.GetValueOrDefault();
        if (updatedDate != SelectedCovidContact.ContactDate && updatedDate != DateTime.MinValue)
            SelectedCovidContact.ContactDate = updatedDate;
        SelectedCovidContact = null;

        _modalRef.Hide();
    }
    private void HideModal()
    {
        SelectedCovidContact = null;

        _modalRef.Hide();
    }



}
