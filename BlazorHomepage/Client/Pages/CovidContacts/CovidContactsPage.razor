@page "/covidcontacts"
<div class="container-fluid">

    <div class="row align-items-start">
        <div class="col-3">
            <AddNewCovidContactForm NewContactAdded="@(f=> NewContactedUpdated(f))" OwnerName="@SelectedUserName"></AddNewCovidContactForm>

        </div>
        <div class="col-lg">
            <h5>Nærkontakter for @SelectedUserName</h5>
            @if (@Contacts != null && Contacts.Any())
            {
                <Blazorise.Table>
                    <Blazorise.TableHeader>
                        <Blazorise.TableRow>
                            <Blazorise.TableHeaderCell>#</Blazorise.TableHeaderCell>
                            <Blazorise.TableHeaderCell>Navn</Blazorise.TableHeaderCell>
                            <Blazorise.TableHeaderCell>Sted</Blazorise.TableHeaderCell>
                            <Blazorise.TableHeaderCell>Kontakt type</Blazorise.TableHeaderCell>
                            <Blazorise.TableHeaderCell>Dato</Blazorise.TableHeaderCell>
                            <Blazorise.TableHeaderCell>Slett</Blazorise.TableHeaderCell>

                        </Blazorise.TableRow>
                    </Blazorise.TableHeader>
                    <Blazorise.TableBody>

                        @foreach (var contact in Contacts)
                        {
                            <Blazorise.TableRow>
                                <OneCovidContactComponent OneContact="contact" DeleteContact="@(f => DeleteSelectedContact(f))"></OneCovidContactComponent>
                            </Blazorise.TableRow>
                        }

                    </Blazorise.TableBody>
                </Blazorise.Table>
            }
            else
            {
                <h4>Ingen kontakter registrert for deg..  </h4>
            }

        </div>

    </div>
</div>


@code {

    public string SelectedUserName { get; set; }

    [Parameter]
    public List<OneCovidContact> Contacts { get; set; }

    private ICovidContactsDataManager _dataManager;
    protected async override Task OnParametersSetAsync()
    {
        if (_dataManager == null)
            _dataManager = new BlazorHomepage.Client.DataManagers.CovidContactsLocalDataManager();
        SelectedUserName = "Daniel";
        if (Contacts == null)
        {
            var previsous = new DateTime(2021, 1, 20);

            Contacts = await _dataManager.GetAllContactsFromUser(SelectedUserName.ToLower());
        }

    }

    private async Task DeleteSelectedContact(OneCovidContact toDelete)
    {
        await _dataManager.DeleteContact(toDelete.Id).ContinueWith(f=> {
            if(f.IsCompletedSuccessfully)
                    Contacts.Remove(toDelete);
        });

    }

    private async Task NewContactedUpdated(OneCovidContact newContact)
    {

        await _dataManager.AddContact(newContact).ContinueWith(f =>
        {
            if (f.Result != null)
            {
                Contacts.Add(newContact);
            }
        });
    }

}
