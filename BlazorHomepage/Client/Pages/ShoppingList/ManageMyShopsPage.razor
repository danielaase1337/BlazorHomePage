@*@page "/managemyshops/{userid}"*@
@page "/managemyshops/"

<div class="container">
    <div class="row">
        <div class="col">
            <h2>Lagrede Butikker</h2>
            <div class="row">
                <div class="col">
                    <input class="new-todo" placeholder="Navn?" name="newVare" @bind="@_newShopName" @onkeyup="OnKeyUpNewListItemHandler">
                </div>
                <div class="col-2">
                    <MudButton Size="Size.Small"><i class="fas fa-check" @onclick="@(f => AddShop())"></i></MudButton>
                </div>
            </div>
        </div>
    </div>
    @if (MyShops != null)
    {
        <div class="row">
            <ul class="todo-list">
                @foreach (var l in MyShops)
                {
                    <li class="@l.CssComleteEditClassName">
                        <div class="parent-horizontal-stack">
                            <div class="col">
                                @if (l.EditClicked)
                                {
                                    <input class="editing" @bind-value="@(l.Name)" />
                                }
                                else
                                {
                                    <label>
                                        <a href="@(GetItemNavLink(l.Id))">@l.Name</a>
                                    </label>
                                }
                            </div>
                            @if (l.EditClicked)
                            {
                                <div class="col-6">
                                    <MudButtonGroup>
                                        <MudButton Class="editButtonStyle" @onclick="@(e => StoreChange(l))"><i class="fas fa-check"></i></MudButton>
                                        <MudButton Class="editButtonStyle" @onclick="@(e => { l.EditClicked= false;  })"><i class="fas fa-times"> </i></MudButton>
                                        <MudButton Class="editButtonStyle" @onclick="@(e => DeleteList(l))"><i class="fas fa-ban"> </i></MudButton>
                                    </MudButtonGroup>
                                </div>
                            }
                            else
                            {
                                <div class="col-2">
                                    <Button @onclick="@(e => { l.EditClicked = true;  })"><i class="fas fa-edit"></i></Button>

                                </div>
                            }
                        </div>
                    </li>
                }

            </ul>
        </div>
    }
    else
    {
        <LoadingComponent>

        </LoadingComponent>
    }
</div>



@code {
    private ShopModel newShop = new ShopModel();
    private string _newShopName;

    [Inject]
    IGenericRepository<ShopModel> ShopModelDataManager { get; set; }

    private ICollection<ShopModel> MyShops { get; set; }

    private async Task StoreChange(ShopModel item)
    {
        item.EditClicked = false;
        await ShopModelDataManager.Update(item);
    }
    private async Task DeleteList(ShopModel l)
    {
        var res = await ShopModelDataManager.Delete(l);
        if (res)
            MyShops.Remove(l);
    }

    private string GetItemNavLink(string shopId)
    {
        return $"oneShop/{shopId}";
    }

    private async Task OnKeyUpNewListItemHandler(KeyboardEventArgs args)
    {
        if (args.Code.Equals("Enter"))
        {
            await AddShop();
        }
    }

    private async Task AddShop()
    {
        if (string.IsNullOrEmpty(_newShopName)) return;
        var newShop = new ShopModel() { Name = _newShopName };
        var res = await ShopModelDataManager.Insert(newShop);
        if (res != null)
        {
            MyShops.Add(res);
            _newShopName = string.Empty;
        }
    }


    protected override async Task OnParametersSetAsync()
    {
        MyShops = await ShopModelDataManager.Get();
        if (MyShops == null)
            MyShops = new List<ShopModel>();
    }

  
}
