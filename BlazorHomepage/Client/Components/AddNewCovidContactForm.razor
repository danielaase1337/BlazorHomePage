
<style type="text/css">
    .form-style-1 {
        max-width:400px;
        font: 13px "Lucida Sans Unicode", "Lucida Grande", sans-serif;
    }

        .form-style-1 li {
            padding: 0;
            display: block;
            list-style: none;
        }

        .form-style-1 label {
            margin: 0 0 3px 0;
            padding: 0px;
            display: block;
            font-weight: bold;
        }

      /*  .form-style-1 input[type=text],
        .form-style-1 input[type=date],
        .form-style-1 input[type=datetime],
        .form-style-1 input[type=number],
        .form-style-1 input[type=search],
        .form-style-1 input[type=time],
        .form-style-1 input[type=url],
        .form-style-1 input[type=email],
        textarea,
        select {
            box-sizing: border-box;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            border: 1px solid #BEBEBE;
            padding: 7px;
            margin: 0px;
            -webkit-transition: all 0.30s ease-in-out;
            -moz-transition: all 0.30s ease-in-out;
            -ms-transition: all 0.30s ease-in-out;
            -o-transition: all 0.30s ease-in-out;
            outline: none;
        }*/

            /*.form-style-1 input[type=text]:focus,
            .form-style-1 input[type=date]:focus,
            .form-style-1 input[type=datetime]:focus,
            .form-style-1 input[type=number]:focus,
            .form-style-1 input[type=search]:focus,
            .form-style-1 input[type=time]:focus,
            .form-style-1 input[type=url]:focus,
            .form-style-1 input[type=email]:focus,
            .form-style-1 textarea:focus,
            .form-style-1 select:focus {
                -moz-box-shadow: 0 0 8px #88D5E9;
                -webkit-box-shadow: 0 0 8px #88D5E9;
                box-shadow: 0 0 8px #88D5E9;
                border: 1px solid #88D5E9;
            }

       */

        .form-style-1 .field-long {
            width: 100%;
        }

        .form-style-1 .field-select {
            width: 100%;
        }

        .form-style-1 .field-textarea {
            height: 100px;
        }

        .form-style-1 input[type=submit], .form-style-1 input[type=button] {
            background: #4B99AD;
            padding: 8px 15px 8px 15px;
            border: none;
            color: #fff;
        }

            .form-style-1 input[type=submit]:hover, .form-style-1 input[type=button]:hover {
                background: #4691A4;
                box-shadow: none;
                -moz-box-shadow: none;
                -webkit-box-shadow: none;
            }

        .form-style-1 .required {
            color: red;
        }
</style>
    
<h5>Legg til ny nærkontakt</h5>
<EditForm Model="@NewContact" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />

    <ul class="form-style-1">
        <li>
        <label>Navn <span class="required">*</span></label>
        <InputText @bind-Value="NewContact.Name" class="field-long" placeholder="Navn" /> </li>
        <li>
            <label>Sted <span class="required">*</span></label>
            <InputText @bind-Value="NewContact.Sted" class="field-long" placeholder="Sted" />
        </li>
        <li>
            <label>Dato</label>
            <DateEdit TValue="DateTime?" @bind-Date="@selectedDate" />
        </li>
        <li>
            <button class="btn btn-outline-success" style="margin:4px 0 0 0" type="submit">Lagre</button>
        </li>
    </ul>
</EditForm>


@code {
    
    DateTime? selectedDate;

    public OneContactModel NewContact { get; set; }

    [Parameter]
    public EventCallback<OneContactModel> NewContactAdded { get; set; }
    
    [Parameter]
    public string OwnerName { get; set; }

    protected override void OnParametersSet()
    {
        NewContact = new OneContactModel(); 
        selectedDate = DateTime.Now;
    }

    private void HandleValidSubmit()
    {
        if (NewContact == null)
            NewContact = new OneContactModel();
        if (selectedDate == null)
            selectedDate = DateTime.Now;
        NewContact.ContactDate = selectedDate.GetValueOrDefault();
        NewContact.CategoryId = "Kontakt";
        NewContactAdded.InvokeAsync(NewContact);
    }

    
}
